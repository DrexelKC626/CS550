define lengthItr
	proc (L)
		i := 0;
		while (1-nullp(L)) do
			i := i + 1;
			L := cdr(L)
		od;
		return i
	end;
define lengthRec
	proc (L)
		if nullp(L) then
			return 0
		else
			return lengthRec(cdr(L)) + 1
		fi
	end;
testY := [[[1,2],[10,11]],[5,[6,7,8]]];
testx := [3,4];
consResult := cons(testY , [3,4]);
cdrResult := cdr(testY);
carResult := car(testY);
null := [];
isNull := nullp(null);
isNotNull := nullp(testY);
isList := listp(testY);
isNotList := listp(1);
isInt := intp(1);
isNotInt := intp(testY);
li := lengthItr(testY);
lr := lengthRec(testY);
n := 0 - 5;
if n then i := n else i := 0 - n fi;
fact := 1;
while i do 
	fact := fact * i;
	i := i - 1 
od